using System;
using System.Text.RegularExpressions;

public class CPHInline 
{
    public bool Execute() 
    {
        // Debug: Alle verfügbaren Arguments loggen
        CPH.LogInfo("=== TikTok Request Debug ===");
        foreach(var arg in args)
        {
            CPH.LogInfo($"Argument: {arg.Key} = {arg.Value}");
        }
        
        // Hole die TikTok URL aus verschiedenen Quellen
        string input = "";
        string userName = "";
        string inputSource = "";
        
        // Prüfe ob es ein Chat Command ist
        if (CPH.TryGetArg("input0", out object inputValue) && !string.IsNullOrEmpty(inputValue.ToString()))
        {
            input = inputValue.ToString().Trim();
            inputSource = "command";
            CPH.LogInfo($"Found input from command: {input}");
        }
        // Prüfe ob es ein Channel Point Reward ist - verschiedene Parameter testen
        else if (CPH.TryGetArg("rewardRedemptionMessage", out object rewardMessageValue) && !string.IsNullOrEmpty(rewardMessageValue.ToString()))
        {
            input = rewardMessageValue.ToString().Trim();
            inputSource = "reward";
            CPH.LogInfo($"Found input from rewardRedemptionMessage: {input}");
        }
        else if (CPH.TryGetArg("message", out object messageValue) && !string.IsNullOrEmpty(messageValue.ToString()))
        {
            input = messageValue.ToString().Trim();
            inputSource = "reward";
            CPH.LogInfo($"Found input from message: {input}");
        }
        else if (CPH.TryGetArg("rawInput", out object rawInputValue) && !string.IsNullOrEmpty(rawInputValue.ToString()))
        {
            input = rawInputValue.ToString().Trim();
            inputSource = "chat";
            CPH.LogInfo($"Found input from rawInput: {input}");
        }
        
        // Hole Username aus verschiedenen Quellen
        if (CPH.TryGetArg("userName", out object userValue))
        {
            userName = userValue.ToString();
        }
        else if (CPH.TryGetArg("user", out object userValue2))
        {
            userName = userValue2.ToString();
        }
        else if (CPH.TryGetArg("displayName", out object displayValue))
        {
            userName = displayValue.ToString();
        }
        
        CPH.LogInfo($"Username: {userName}, Input: '{input}', Source: {inputSource}");
        
        // Prüfe ob eine URL eingegeben wurde
        if (string.IsNullOrEmpty(input)) 
        {
            string helpMessage = inputSource == "reward" 
                ? "@" + userName + " Du musst eine TikTok URL in deine Channel Point Nachricht eingeben!"
                : "@" + userName + " Du musst eine TikTok URL angeben! Beispiel: !tiktok https://www.tiktok.com/@user/video/123456";
                
            CPH.SendMessage(helpMessage, true);
            CPH.LogInfo("Error: No input provided");
            return false;
        }
        
        // Erweiterte TikTok URL Validierung - verschiedene Formate unterstützen
        bool isValidTikTok = false;
        
        // Verschiedene TikTok URL Formate prüfen
        if (input.Contains("tiktok.com") && input.Contains("video"))
        {
            isValidTikTok = true;
        }
        else if (input.Contains("vm.tiktok.com")) // Kurze TikTok Links
        {
            isValidTikTok = true;
        }
        else if (input.Contains("tiktok.com/@") && input.Contains("/"))
        {
            isValidTikTok = true;
        }
        else if (Regex.IsMatch(input, @"tiktok\.com.*[/@].*", RegexOptions.IgnoreCase))
        {
            isValidTikTok = true;
        }
        
        CPH.LogInfo($"URL validation result: {isValidTikTok} for URL: {input}");
        
        if (!isValidTikTok) 
        {
            CPH.SendMessage("@" + userName + " Das ist keine gültige TikTok URL! Akzeptierte Formate: tiktok.com/@user/video/..., vm.tiktok.com/...", true);
            CPH.LogInfo("Error: Invalid TikTok URL format");
            return false;
        }
        
        // Speichere die URL für die nächsten Steps
        CPH.SetArgument("tiktokUrl", input);
        CPH.SetArgument("requestUser", userName);
        CPH.SetArgument("inputSource", inputSource);
        
        CPH.LogInfo($"Success: URL accepted and arguments set");
        
        return true;
    }
}
